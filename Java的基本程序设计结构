1.注释
//
/*  */ 不能嵌套，因为要注释的代码块中可能包含*/界定符
/**  */ 可以用来自动地生成文档（？不懂）

2.数据类型
Java是一种强类型语言。
8种基本数据类型：4种整型，2种浮点类型，1种字符类型char，1种表示真值的类型boolean。

2.1整型
用于表示整数（没有小数部分的数值），包括正整数和负整数——有符号数，如9，-19。
byte    1字节（8bit） -128~127                                          2^8=256。原码反码补码参照博客https://www.cnblogs.com/wkfvawl/p/10512739.html
short   2字节         -32768~32767                                      2^16=65536。65536/2=32768。 
int     4字节         -21,4748,3648~21,4748,3647(刚刚超过20亿            2^32=42,9496,7296  最常用，但如果要表示整个地球的人口这种，就需要用long了。
long    8字节                                                           2^64=1844,6744,0737,0955,1616
与C/C++不同，Java中，整型的范围与目标平台无关。无论是16位、32位还是64位处理器，4种整型的表示范围都是上面这样。
十六进制前缀0x或0X（如0xCAFE），八进制前缀0（如010,八进制易混淆），二进制前缀0b或0B。
长整型数值后面有一个后缀L或l，如4000000000L。
Java7之后，可以为数字加下划线使其更易读，Java编译器会自动去除这些下划线，不会影响程序运行。如1_000_000，0b1111_0100_0010_0100_0000。
注意：Java没有任何无符号形式（unsigned）的byte,short,int,long。

2.2浮点类型
浮点类型用于表示有小数部分的数值。
float    4字节    有效位数6~7位
double   8字节    有效位数15位
float类型的数值后缀为F或f，double类型的数值后缀为D或d，没有后缀的浮点数默认为double类型，如3.14。
三个特殊的浮点数值：正无穷大，负无穷大和NaN。分别用常量Double.POSITIVE_INFINITY，Double.NEGATIVE_INFINITY和Double.NaN表示。
一个正整数除以0的结果为正无穷大，负整数除以0的结果为负无穷大，0/0或负数的平方根的结果为NaN。判断一个数是不是NaN，不能用x==Double.NaN，而应该使用Double.isNaN(x)。因为非数值的值都认为是不相同的，
即使x是NaN，用第一种判断方法也会得出不相等的结果。

2.3字符类型
char  要用单引号括起来，如'A'

2.4boolean类型
布尔类型有两个值：true和false，不像C/C++那样，0相当于false，非0相当于true，Java中整型值和布尔值之间不能相互转换。

3.变量与常量















